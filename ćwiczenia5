1. CREATE DATABASE cw5;
   CREATE EXTENSION postgis;
   CREATE TABLE obiekty(id INT, geometry geometry, name VARCHAR(50));

1a. INSERT INTO obiekty VALUES
    	(1, ST_COLLECT(ARRAY['LINESTRING(0 1, 1 1)', 'CIRCULARSTRING(1 1, 2 0, 3 1)', 'CIRCULARSTRING(3 1, 4 2, 5 1)', 'LINESTRING(5 1, 6 1)']), 'obiekt_1');

1b. INSERT INTO obiekty VALUES
	(2, ST_COLLECT(ARRAY['LINESTRING(10 6, 14 6)', 'CIRCULARSTRING(14 6, 16 4, 14 2)', 'CIRCULARSTRING(14 2, 12 0, 10 2)', 'LINESTRING(10 2, 10 16)', 'CIRCULARSTRING(11 2, 12 3, 13 2, 12 1, 11 2)']), 'obiekt_2')

1c. INSERT INTO obiekty VALUES
	(3, ST_COLLECT(ARRAY['LINESTRING(7 15, 10 17)', 'LINESTRING(10 17, 12 13)', 'LINESTRING(12 13, 7 15)']), 'obiekt_3')

1d. INSERT INTO obiekty VALUES
	(4, ST_COLLECT(ARRAY['LINESTRING(20 20, 25 25)', 'LINESTRING(25 25, 27 24)', 'LINESTRING(27 24, 25 22)', 'LINESTRING(25 22, 26 21)', 'LINESTRING(26 21, 22 19)', 'LINESTRING(22 19, 20.5 19.5)']), 'obiekt_4')

1e. INSERT INTO obiekty VALUES
	(5, ST_COLLECT(ARRAY[ST_MakePoint(30, 30, 59), ST_MakePoint(38, 32, 234)]), 'obiekt_5')

1f. INSERT INTO obiekty VALUES
	(6, ST_COLLECT(ARRAY['LINESTRING(1 1, 3 2)', 'POINT(4 2)']), 'obiekt_6')

2. SELECT ST_AREA(ST_BUFFER(ST_SHORTESTLINE(o3.geometry, o4.geometry), 5)) AS Pole_powierzchni
   FROM obiekty AS o3 
   CROSS JOIN obiekty AS o4
   WHERE o3.id = 3 AND o4.id = 4
3. --Aby obiekt stał sie poligonem musi on być obiektem zamkniętym, co przy obiekcie 'obiekt_4' oznacza, że pierwsza współrzedna pierwszego 'LINESTRING' i druga współrzędna ostatniego 'LINESTRING powinny być identyczne, 
więc obiekt 'obiekt_4' nie spełnia warunków do stworzenia poligonu. Możemy zatem dołączyć linie do obiektu 'obiekt_4' tak aby stał sie obiektem zamkniętym a dopiero pozniej zamienić na poligon.

   UPDATE obiekty SET
   geometry = (SELECT ST_POLYGONIZE(ST_COLLECT(ARRAY[geometry, 'LINESTRING(20.5 19.5, 20 20)']))  
   FROM obiekty 
   WHERE id = 4)

 WHERE id = 4
4. INSERT INTO obiekty VALUES
('7', (SELECT ST_COLLECT(o3.geometry, o4.geometry) FROM obiekty AS o3 CROSS JOIN obiekty AS o4 WHERE o3.id = 3 AND o4.id = 4), 'obiekt-7')

5. SELECT ST_AREA(ST_BUFFER(geometry, 5)) AS Pole_powierzchni FROM obiekty WHERE NOT ST_HASARC(geometry) 
